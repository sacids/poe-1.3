# Generated by Django 2.2.13 on 2020-12-14 09:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ActionTaken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(null=True)),
            ],
            options={
                'verbose_name_plural': 'Action Taken',
                'db_table': 'et_action_taken',
            },
        ),
        migrations.CreateModel(
            name='Disease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Diseases',
                'db_table': 'et_diseases',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10, null=True)),
                ('parent', models.PositiveIntegerField()),
                ('calling_code', models.CharField(max_length=5, null=True, verbose_name='Calling code')),
            ],
            options={
                'verbose_name_plural': 'Locations',
                'db_table': 'et_locations',
            },
        ),
        migrations.CreateModel(
            name='PointOfEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('code', models.CharField(blank=True, max_length=100, null=True)),
                ('mode_of_transport', models.CharField(blank=True, choices=[('flight', 'Flight'), ('truck', 'Truck'), ('bus', 'Bus'), ('vehicle', 'Vehicle'), ('vessel', 'Vessel'), ('train', 'Train')], max_length=255, null=True)),
                ('category', models.CharField(blank=True, choices=[('Ground crossing', 'Ground crossing'), ('Dry port', 'Dry port'), ('Airport', 'Airport'), ('Lakeport', 'Lakeport'), ('Seaport', 'Seaport'), ('Railway', 'Railway')], max_length=50, null=True)),
                ('agents', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Point of Entries',
                'db_table': 'et_point_of_entries',
            },
        ),
        migrations.CreateModel(
            name='Symptom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('title_sw', models.CharField(max_length=150, null=True)),
                ('alias', models.CharField(max_length=150, null=True)),
            ],
            options={
                'verbose_name_plural': 'Symptoms',
                'db_table': 'et_symptoms',
            },
        ),
        migrations.CreateModel(
            name='Traveller',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at Date')),
                ('surname', models.CharField(max_length=50, null=True, verbose_name='Write..')),
                ('other_names', models.CharField(max_length=100, null=True)),
                ('category', models.CharField(choices=[('arrival', 'ARRIVAL'), ('departure', 'DEPARTURE')], default='None', max_length=30)),
                ('sex', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], default='None', max_length=15)),
                ('age_category', models.CharField(choices=[('above', 'ABOVE 1'), ('below', 'BELOW 1')], max_length=30, null=True)),
                ('age', models.IntegerField(null=True)),
                ('id_type', models.CharField(choices=[('passport-number', 'PASSPORT NUMBER'), ('national-id', 'NATIONAL ID'), ('voter-id', 'VOTER ID')], default='None', max_length=50)),
                ('id_number', models.CharField(max_length=50)),
                ('employment', models.CharField(choices=[('student', 'Student'), ('religious', 'Religious'), ('farmer', 'Farmer'), ('hunter', 'Hunter'), ('nurse', 'Nurse'), ('clinician', 'Clinician'), ('engineer', 'Engineer'), ('sports', 'Sports'), ('business', 'Business'), ('other', 'Other')], default='None', max_length=50)),
                ('other_employment', models.CharField(blank=True, max_length=255, null=True)),
                ('mode_of_transport', models.CharField(choices=[('flight', 'Flight'), ('truck', 'Truck'), ('bus', 'Bus'), ('vehicle', 'Vehicle'), ('vessel', 'Vessel'), ('train', 'Train')], default='None', max_length=50)),
                ('name_of_transport', models.CharField(max_length=50)),
                ('seat_number', models.CharField(blank=True, max_length=25, null=True)),
                ('arrival_date', models.DateField(verbose_name='Arrival Date')),
                ('visiting_purpose', models.CharField(choices=[('resident', 'Resident'), ('tourist', 'Tourist'), ('transit', 'Transit'), ('business', 'Business'), ('conference', 'Conference'), ('studies', 'Studies'), ('other', 'Other')], default='None', max_length=50)),
                ('other_purpose', models.TextField(null=True)),
                ('duration_of_stay', models.PositiveIntegerField(default=0, null=True)),
                ('physical_address', models.TextField(null=True)),
                ('district_id', models.IntegerField(default=0, null=True)),
                ('street_or_ward', models.CharField(max_length=100, null=True)),
                ('phone', models.CharField(default='None', max_length=25)),
                ('email', models.EmailField(default='None', max_length=255)),
                ('temp', models.FloatField(null=True)),
                ('disease_to_screen', models.CharField(default='0', max_length=150)),
                ('other_symptoms', models.TextField(null=True)),
                ('accept', models.IntegerField(default=0, null=True)),
                ('updated_at', models.DateTimeField(null=True, verbose_name='Updated date')),
                ('action_taken', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='travellers.ActionTaken')),
                ('location_origin', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='location_origin', to='travellers.Location')),
                ('nationality', models.ForeignKey(default=0, on_delete=django.db.models.deletion.DO_NOTHING, related_name='nationality', to='travellers.Location')),
                ('point_of_entry', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='point_of_entry', to='travellers.PointOfEntry')),
                ('region', models.ForeignKey(default=0, on_delete=django.db.models.deletion.DO_NOTHING, related_name='region', to='travellers.Location')),
                ('symptoms', models.ManyToManyField(blank=True, to='travellers.Symptom')),
            ],
            options={
                'db_table': 'et_travellers',
                'ordering': ('created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TravellerVisitedArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_visited', models.CharField(max_length=250, null=True)),
                ('date', models.DateField(null=True, verbose_name='Date')),
                ('days', models.PositiveIntegerField(null=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='travellers.Location')),
                ('traveller', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='visited_area', to='travellers.Traveller')),
            ],
            options={
                'db_table': 'et_traveller_visited_areas',
            },
        ),
        migrations.CreateModel(
            name='ScreenCriteria',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temp', models.CharField(blank=True, max_length=250, null=True)),
                ('active', models.CharField(choices=[('1', '1'), ('0', '0')], default='0', max_length=1)),
                ('countries', models.ManyToManyField(blank=True, related_name='countries', to='travellers.Location')),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='travellers.Disease')),
                ('symptoms', models.ManyToManyField(blank=True, related_name='symptoms', to='travellers.Symptom')),
            ],
            options={
                'verbose_name_plural': 'Screening Criteria',
                'db_table': 'et_ss_criteria',
            },
        ),
        migrations.CreateModel(
            name='LocationDisease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.PositiveIntegerField()),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='travellers.Disease')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='travellers.Location')),
            ],
            options={
                'db_table': 'et_location_diseases',
            },
        ),
        migrations.CreateModel(
            name='DiseaseSymptom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.PositiveIntegerField()),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='travellers.Disease')),
                ('symptom', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='travellers.Symptom')),
            ],
            options={
                'verbose_name_plural': 'Disease Symptoms',
                'db_table': 'et_disease_symptoms',
            },
        ),
    ]
